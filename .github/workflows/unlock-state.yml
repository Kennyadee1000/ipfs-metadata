name: 06 Unlock Terraform State

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to unlock state for'
        required: true
        default: dev
        type: choice
        options:
          - dev
          - prod
      LOCK_ID:
        description: 'Enter lock id'
        required: true


jobs:
  unlockIpfsInfrastructureState:
    name: Unlock IPFS Infrastructure Terraform State
    runs-on: ubuntu-latest
    container: hashicorp/terraform
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create backend file
        if: ${{ vars.DEPLOY_NEW_STATE == 'false' }}
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
        run: |
          echo 'Updating backend configuration...'
          cat <<EOF > backend.tf
          terraform {
              backend "s3" {
              bucket = "${{ vars.STATE_BUCKET_PREFIX }}-${{ github.event.inputs.environment }}-backend-tfstate"
              profile = "${{ github.event.inputs.environment }}"
              key = "${{ vars.STATE_BUCKET_PREFIX }}-${{ github.event.inputs.environment }}-cluster/terraform.tfstate"
              region = "${{ secrets.AWS_DEFAULT_REGION }}"
              dynamodb_table = "${{ vars.STATE_BUCKET_PREFIX }}-${{ github.event.inputs.environment }}-terraform-locks"
              encrypt = true
              shared_credentials_files = ["~/.aws/credentials"]
            }
          }
          EOF
      - name: Setup Envs
        run: |
          mkdir ~/.aws
          echo -e "${{ secrets.SHARED_CREDENTIALS }}" >> ~/.aws/credentials
          echo -e "${{ secrets.SHARED_CONFIG }}" >> ~/.aws/config
          
          if [ "${{ vars.ENABLE_HTTPS }}" = "true" ]; then
            enable_https=true
          else
            enable_https=false
          fi
          echo "enable_https = ${enable_https}" >> terraform/environments/${{ github.event.inputs.environment }}/terraform.tfvars
          
          echo -e "certificate_arn = \"${{ vars.CERTIFICATE_ARN }}\"" >> terraform/environments/${{ github.event.inputs.environment }}/terraform.tfvars
          
          echo -e "domain_name = \"${{ vars.DOMAIN_NAME }}\"" >> terraform/environments/${{ github.event.inputs.environment }}/terraform.tfvars

      - name: Terraform Init
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
        run: terraform init

      - name: Terraform Unlock State
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
        run: terraform force-unlock -force "${{ github.event.inputs.LOCK_ID }}"
name: Setup Terraform State Backend

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy state to'
        required: true
        default: dev
        type: choice
        options:
          - dev
          - prod

jobs:
  deployStateBucket:
    name: Deploy State Bucket
    runs-on: ubuntu-latest
    container: hashicorp/terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Envs
        run: |
          mkdir ~/.aws
          echo -e "${{ secrets.SHARED_CREDENTIALS }}" >> ~/.aws/credentials
          echo -e "${{ secrets.SHARED_CONFIG }}" >> ~/.aws/config

      - name: Terraform Init (Local)
        run: |
          cd terraform/terraform_backends/${{ github.event.inputs.environment }}
          terraform init

      - name: Terraform Apply (Create State Bucket and DynamoDB)
        run: |
          cat ~/.aws/config
          cd terraform/terraform_backends/${{ github.event.inputs.environment }}
          terraform apply -auto-approve

      - name: Update Backend Configuration
        run: |
          cd terraform/terraform_backends/${{ github.event.inputs.environment }}
          # You would dynamically update your Terraform files here if needed
          echo 'Updating backend configuration...'
          cat <<EOF > backend.tf
          terraform {
              backend "s3" {
              bucket = "bp-${{ github.event.inputs.environment }}-backend-tfstate"
              profile = "${{ github.event.inputs.environment }}"
              key = "bp-state-file/terraform.tfstate"
              region = "us-east-2"
              dynamodb_table = "bp-${{ github.event.inputs.environment }}-terraform-locks"
              encrypt = true
              shared_credentials_file = "~/.aws/credentials"
            }
          }
          EOF

      - name: Re-Initialize Terraform with S3 Backend
        run: |
          cd terraform/terraform_backends/${{ github.event.inputs.environment }}
          terraform init -reconfigure

      - name: Terraform Plan (Check Configuration)
        run: |
          cd terraform/terraform_backends/${{ github.event.inputs.environment }}
          terraform plan

      - name: Terraform Apply (Final Configuration)
        run: |
          cd terraform/terraform_backends/${{ github.event.inputs.environment }}
          terraform apply -auto-approve

      - name: Cleanup Local State
        run: |
          cd terraform/terraform_backends/${{ github.event.inputs.environment }}
          rm -f terraform.tfstate